{"version":3,"file":"/home/airam/Escritorio/P6 DSI/src/ejercicio-1/Fighter.ts","sources":["/home/airam/Escritorio/P6 DSI/src/ejercicio-1/Fighter.ts"],"names":[],"mappings":";AAAA,4BAA4B;;;AAS5B;;;GAGG;AACH,MAAsB,OAAO;IAQ3B;;;;;;;;;OASG;IACH,YAAY,IAAY,EAAE,MAAa,EAAE,MAAc,EAAE,KAAY,EAAE,QAAkB,EAAE,MAAc,EAAE,IAAyB;QAClI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACD;;;OAGG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD;;OAEG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD;;;OAGG;IACH,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IACD;;;OAGG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD;;;OAGG;IACH,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD;;;OAGG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD;;;KAGC;IACD,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IACD;;;OAGG;IACH,KAAK,CAAC,EAAS;QACb,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;IACrB,CAAC;CACF;AAlFD,0BAkFC","sourcesContent":["/* eslint-disable max-len */\n\nexport type stats = {\n    attack: number,\n    defense: number,\n    speed: number,\n    hp: number,\n}\nexport type universe = 'marvel' | 'pokemon' | 'DC';\n/**\n * Clase abstracta fighter en la que se crea un luchador con sus atributos\n * y posee metodos para trabajar con los atributos del luchador en la clase combat\n */\nexport abstract class Fighter {\n  private readonly name: string;\n  private readonly weight: number;\n  private readonly height: number;\n  private readonly universe: universe;\n  private Stats: stats;\n  private readonly phrase: string;\n  private readonly type:string | undefined;\n  /**\n   * Constructor de un Fighter\n   * @param name nombre del Fighter\n   * @param weight Peso del Fighter\n   * @param height Altura del Fighter\n   * @param stats Stats del Fighter\n   * @param universe Universo del Fighter\n   * @param phrase Frase caracter√≠stica del Fighter\n   * @param type Tipo del Fighter\n   */\n  constructor(name: string, weight:number, height: number, stats: stats, universe: universe, phrase: string, type?: string | undefined) {\n    this.name = name;\n    this.weight = weight;\n    this.height = height;\n    this.universe = universe;\n    this.Stats = stats;\n    this.phrase = phrase;\n    this.type = type;\n  }\n  /**\n   * retorna el nombre del luchador\n   * @returns el nombre del luchador\n   */\n  getName() {\n    return this.name;\n  }\n  /** getter del peso\n   * @returns el peso del luchador\n   */\n  getWeight() {\n    return this.weight;\n  }\n  /**\n   * getter del universo\n   * @returns el universo del luchador\n   */\n  getUniverse() {\n    return this.universe;\n  }\n  /**\n   * getter de la frase\n   * @returns la frase del luchador\n   */\n  getPhrase() {\n    return this.phrase;\n  }\n  /**\n   * getter de la altura\n   * @returns la altura del luchador\n   */\n  getHeight() {\n    return this.height;\n  }\n  /**\n   * getter del tipo\n   * @returns tipo del pokemon\n   */\n  getType() {\n    return this.type;\n  }\n  /**\n * getter del segundo tipo\n * @returns segundo tipo del pokemon, argumento opcional\n */\n  getStats() {\n    return this.Stats;\n  }\n  /**\n   * setter que actualiza la vida de un pokemon\n   * @param hp vida a actualizar\n   */\n  setHp(hp:number) {\n    this.Stats.hp = hp;\n  }\n}\n\n\n"]}